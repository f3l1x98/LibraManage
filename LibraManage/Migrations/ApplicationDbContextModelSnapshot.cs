// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace LibraManage.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Books.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfCopies")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Domain.Loans.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("LoanEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("LoanStartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("LoanedBookId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LoanerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LoanedBookId");

                    b.HasIndex("LoanerId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Domain.Members.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Domain.Loans.Loan", b =>
                {
                    b.HasOne("Domain.Books.Book", "LoanedBook")
                        .WithMany("LoanedCopies")
                        .HasForeignKey("LoanedBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Members.Member", "Loaner")
                        .WithMany("LoanedBooks")
                        .HasForeignKey("LoanerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanedBook");

                    b.Navigation("Loaner");
                });

            modelBuilder.Entity("Domain.Books.Book", b =>
                {
                    b.Navigation("LoanedCopies");
                });

            modelBuilder.Entity("Domain.Members.Member", b =>
                {
                    b.Navigation("LoanedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
